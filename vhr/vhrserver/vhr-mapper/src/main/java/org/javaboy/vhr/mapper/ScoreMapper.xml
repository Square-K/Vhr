<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.ScoreMapper">

    <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.Score">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="sid" property="sid" jdbcType="INTEGER"/>
        <result column="lesson_name" property="lessonName" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="DOUBLE"/>
        <result column="lesson_order" property="lessonOrder" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 一对多查询，按照学生查询成绩 -->
    <resultMap id="StudentResultMap" type="org.javaboy.vhr.model.Student">
        <id column="sid" property="sid" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="period" property="period" jdbcType="INTEGER"/>
        <collection property="scores" ofType="org.javaboy.vhr.model.Score">
            <id column="id" property="id" jdbcType="INTEGER"/>
            <result column="sid" property="sid" jdbcType="INTEGER"/>
            <result column="lesson_name" property="lessonName" jdbcType="VARCHAR"/>
            <result column="score" property="score" jdbcType="DOUBLE"/>
            <result column="lesson_order" property="lessonOrder" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,sid,lesson_name,score,lesson_order
    </sql>

    <!-- List<Student> getScoreByPeriod(Integer period); -->
    <select id="getScoreByPeriod" resultMap="StudentResultMap" parameterType="java.lang.Integer">
        select *
        from student
        left join score on student.sid = score.sid
        where student.period = #{period,jdbcType=INTEGER}
    </select>

    <!-- List<Integer> getSidByPeriod(@Param("period") Integer period); -->
    <select id="getSidByPeriod" resultType="java.lang.Integer">
        select sid
        from student
        where student.period = #{period,jdbcType=INTEGER}
    </select>

    <!-- List<Integer> getSumAndAvg(@Param("sid") Integer sid); -->
    <select id="getSum" resultType="java.lang.Double">
        SELECT
            SUM(score) AS sum
        FROM score
        WHERE
            sid = #{sid}
        GROUP BY sid;
    </select>

    <!-- List<Integer> getSumAndAvg(@Param("sid") Integer sid); -->
    <select id="getAvg" resultType="java.lang.Double">
        SELECT
            ROUND(AVG(score), 2) AS avg
        FROM score
        WHERE
            sid = #{sid}
        GROUP BY sid;
    </select>

    <!-- Integer getMinPeriod(); -->
    <select id="getMinPeriod" resultType="java.lang.Integer">
        select period from student group by period order by period asc limit 1
    </select>

    <!-- List<Integer> getAllPeriod(); -->
    <select id="getAllPeriod" resultType="java.lang.Integer">
        select period from student group by period order by period asc
    </select>

    <!-- boolean updateScore(Integer id, Integer score); -->
    <update id="updateScore" parameterType="org.javaboy.vhr.model.Score">
        update score
        set score = #{score, jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- boolean deleteScore(Integer id); -->
    <delete id="deleteScore" parameterType="java.lang.Integer">
        delete from score
        where sid = #{id,jdbcType=INTEGER}
    </delete>

    <!-- boolean deleteStudent(Integer[] ids);　-->
    <delete id="deleteStudent" parameterType="java.lang.Integer">
        delete from student
        where sid in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>;
    </delete>

    <!-- boolean addScore(@Param("list") List<Score> list); -->
    <insert id="addScore" parameterType="org.javaboy.vhr.model.Score">
        insert into score (sid,lesson_name,score,lesson_order)
        values
        <foreach collection="list" separator="," item="s">
            (#{s.sid, jdbcType=INTEGER},#{s.lessonName, jdbcType=VARCHAR},#{s.score, jdbcType=INTEGER},
            #{s.lessonOrder, jdbcType=INTEGER})
        </foreach>;
    </insert>
    <!-- boolean addStudent(@Param("name") String name, @Param("period") Integer period); -->
    <insert id="addStudent">
        insert into student (sid, name, period)
        values (#{sid, jdbcType=INTEGER},#{name, jdbcType=VARCHAR},#{period, jdbcType=INTEGER})
    </insert>

</mapper>
