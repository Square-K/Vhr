<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.InterviewMapper">
    <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.Interview">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="speciality" property="speciality" jdbcType="VARCHAR"/>
        <result column="education" property="education" jdbcType="VARCHAR"/>
        <result column="graduateDate" property="graduateDate" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="weChat" property="weChat" jdbcType="VARCHAR"/>
        <result column="japanese" property="japanese" jdbcType="VARCHAR"/>
        <result column="notes" property="notes" jdbcType="VARCHAR"/>
        <result column="test_time1" property="test_time1" jdbcType="DATE"/>
        <result column="result1" property="result1" jdbcType="VARCHAR"/>
        <result column="test_time2" property="test_time2" jdbcType="DATE"/>
        <result column="result2" property="result2" jdbcType="VARCHAR"/>
        <result column="offer" property="offer" jdbcType="VARCHAR"/>
        <result column="agreement" property="agreement" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, gender, school, speciality, education, graduateDate,idCard,phone,weChat,japanese,notes,test_time1,result1,test_time2,result2,offer,agreement,beginDate
    </sql>

    <select id="maxWorkID" resultType="java.lang.Integer">
        select max(workID) from interview
    </select>

    <select id="getEmployeeByIdCard" resultMap="BaseResultMap">
        select * from employee  where idCard = #{idCard}
    </select>

    <select id="getEmployeeByPhone" resultMap="BaseResultMap">
        select * from interview  where phone = #{phone}
    </select>

    <select id="getEmployeeById" resultMap="BaseResultMap">
        select * from interview
        <where>
            <if test="id != null">
                id = #{id,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="getEmployeeByPage" resultMap="BaseResultMap">
        select * from interview
            <where>
                <if test="emp!=null">
                    <if test="emp.name !=null and emp.name!=''">
                        and name like concat('%',#{emp.name},'%')
                    </if>
                    <if test="emp.school !=null and emp.school!=''">
                        and school = #{emp.school,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.japanese !=null and emp.japanese!=''">
                        and japanese = #{emp.japanese,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.result1 !=null and emp.result1!=''">
                        and result1 = #{emp.result1,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.result2 !=null and emp.result2!=''">
                        and result2 = #{emp.result2,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.offer !=null and emp.offer!=''">
                        and offer = #{emp.offer,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.agreement !=null and emp.agreement!=''">
                        and agreement = #{emp.agreement,jdbcType=VARCHAR}
                    </if>
                    <if test="emp.beginDate !=null">
                        and beginDate = #{emp.beginDate,jdbcType=DATE}
                    </if>
                </if>
            </where>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from interview
<!--        <where>-->
<!--            <if test="emp!=null">-->
<!--                <if test="emp.name !=null and emp.name!=''">-->
<!--                    and name like concat('%',#{emp.name},'%')-->
<!--                </if>-->
<!--            </if>-->
<!--        </where>-->
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from interview
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from interview
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="addEmps">
    insert into interview (name, gender, school, speciality, education, graduateDate,
    idCard,phone,weChat,japanese,notes,test_time1,result1,
    test_time2,result2,offer,agreement,beginDate)
    values
    <foreach collection="list" separator="," item="emp">
    (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
    #{emp.school,jdbcType=VARCHAR}, #{emp.speciality,jdbcType=VARCHAR},
    #{emp.education,jdbcType=VARCHAR},#{emp.graduateDate,jdbcType=DATE},
    #{emp.idCard,jdbcType=VARCHAR}, #{emp.phone,jdbcType=VARCHAR},
    #{emp.weChat,jdbcType=VARCHAR},#{emp.japanese,jdbcType=VARCHAR},
    #{emp.notes,jdbcType=VARCHAR}, #{emp.test_time1,jdbcType=DATE},
    #{emp.result1,jdbcType=VARCHAR}, #{emp.test_time2,jdbcType=DATE},
    #{emp.result2,jdbcType=VARCHAR},#{emp.offer,jdbcType=VARCHAR},
    #{emp.agreement,jdbcType=VARCHAR}, #{emp.beginDate,jdbcType=DATE}
        )
    </foreach>
    </insert>
    <insert id="insert" parameterType="org.javaboy.vhr.model.Interview">
    insert into interview (id,name, gender, school, speciality, education, graduateDate,
    idCard,phone,weChat,japanese,notes,test_time1,result1,
    test_time2,result2,offer,agreement,beginDate
    )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
    #{school,jdbcType=VARCHAR}, #{speciality,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR},
    #{graduateDate,jdbcType=DATE},#{idCard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{weChat,jdbcType=VARCHAR},#{japanese,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR},
    #{test_time1,jdbcType=DATE},#{result1,jdbcType=VARCHAR}, #{test_time2,jdbcType=DATE},
    #{result2,jdbcType=VARCHAR},#{offer,jdbcType=VARCHAR}, #{agreement,jdbcType=VARCHAR},
    #{beginDate,jdbcType=DATE}
           )
    </insert>
    <insert id="insert2" parameterType="org.javaboy.vhr.model.Interview">
        insert into interview (id, name, gender, school, speciality, education, phone, weChat)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
                #{school,jdbcType=VARCHAR}, #{speciality,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{weChat,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.javaboy.vhr.model.Interview" useGeneratedKeys="true" keyProperty="id">
        insert into interview
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="speciality != null">
                speciality,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="graduateDate != null">
                graduateDate,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="weChat != null">
                weChat,
            </if>
            <if test="japanese != null">
                japanese,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="test_time1 != null">
                test_time1,
            </if>
            <if test="result1 != null">
                result1,
            </if>
            <if test="test_time2 != null">
                test_time2,
            </if>
            <if test="result2 != null">
                result2,
            </if>
            <if test="offer != null">
                offer,
            </if>
            <if test="agreement != null">
                agreement,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="speciality != null">
                #{speciality,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="graduateDate != null">
                #{graduateDate,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="weChat != null">
                #{weChat,jdbcType=VARCHAR},
            </if>
            <if test="japanese != null">
                #{japanese,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="test_time1 != null">
                #{test_time1,jdbcType=DATE},
            </if>
            <if test="result1 != null">
                #{result1,jdbcType=VARCHAR},
            </if>
            <if test="test_time2 != null">
                #{test_time2,jdbcType=DATE},
            </if>
            <if test="result2 != null">
                #{result2,jdbcType=VARCHAR},
            </if>
            <if test="offer != null">
                #{offer,jdbcType=VARCHAR},
            </if>
            <if test="agreement != null">
                #{agreement,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.model.Interview">
        update interview
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="speciality != null">
                speciality = #{speciality,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="graduateDate != null">
                graduateDate = #{graduateDate,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="weChat != null">
                weChat = #{weChat,jdbcType=VARCHAR},
            </if>
            <if test="japanese != null">
                japanese = #{japanese,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="test_time1 != null">
                test_time1 = #{test_time1,jdbcType=DATE},
            </if>
            <if test="result1 != null">
                result1 = #{result1,jdbcType=VARCHAR},
            </if>
            <if test="test_time2 != null">
                test_time2 = #{test_time2,jdbcType=DATE},
            </if>
            <if test="result2 != null">
                result2 = #{result2,jdbcType=VARCHAR},
            </if>
            <if test="offer != null">
                offer = #{offer,jdbcType=VARCHAR},
            </if>
            <if test="agreement != null">
                agreement = #{agreement,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.model.Interview">
        update interview
        set name = #{name,jdbcType=VARCHAR},
          gender = #{gender,jdbcType=CHAR},
            school = #{school,jdbcType=VARCHAR},
            speciality = #{speciality,jdbcType=VARCHAR},
            education = #{education,jdbcType=VARCHAR},
            graduateDate = #{graduateDate,jdbcType=DATE},
            idCard = #{idCard,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            weChat = #{weChat,jdbcType=VARCHAR},
            japanese = #{japanese,jdbcType=VARCHAR},
            notes = #{notes,jdbcType=VARCHAR},
            test_time1 = #{test_time1,jdbcType=DATE},
            result1 = #{result1,jdbcType=VARCHAR},
            test_time2 = #{test_time2,jdbcType=DATE},
            result2 = #{result2,jdbcType=VARCHAR},
            offer = #{offer,jdbcType=VARCHAR},
            agreement = #{agreement,jdbcType=VARCHAR},
            beginDate = #{beginDate,jdbcType=DATE},
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>